#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Clinica.Dental.DM
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BdClinicaDental")]
	public partial class ClinicaDentalDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertPACIENTE(PACIENTE instance);
    partial void UpdatePACIENTE(PACIENTE instance);
    partial void DeletePACIENTE(PACIENTE instance);
    partial void InsertTRATAMIENTO(TRATAMIENTO instance);
    partial void UpdateTRATAMIENTO(TRATAMIENTO instance);
    partial void DeleteTRATAMIENTO(TRATAMIENTO instance);
    partial void InsertHISTORIAL(HISTORIAL instance);
    partial void UpdateHISTORIAL(HISTORIAL instance);
    partial void DeleteHISTORIAL(HISTORIAL instance);
    partial void InsertDETALLE_HISTORIAL(DETALLE_HISTORIAL instance);
    partial void UpdateDETALLE_HISTORIAL(DETALLE_HISTORIAL instance);
    partial void DeleteDETALLE_HISTORIAL(DETALLE_HISTORIAL instance);
    partial void InsertRESERVA(RESERVA instance);
    partial void UpdateRESERVA(RESERVA instance);
    partial void DeleteRESERVA(RESERVA instance);
    #endregion
		
		public ClinicaDentalDataContext() : 
				base(global::Clinica.Dental.DM.Properties.Settings.Default.BdClinicaDentalConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ClinicaDentalDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ClinicaDentalDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ClinicaDentalDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ClinicaDentalDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<PACIENTE> PACIENTE
		{
			get
			{
				return this.GetTable<PACIENTE>();
			}
		}
		
		public System.Data.Linq.Table<TRATAMIENTO> TRATAMIENTO
		{
			get
			{
				return this.GetTable<TRATAMIENTO>();
			}
		}
		
		public System.Data.Linq.Table<HISTORIAL> HISTORIAL
		{
			get
			{
				return this.GetTable<HISTORIAL>();
			}
		}
		
		public System.Data.Linq.Table<DETALLE_HISTORIAL> DETALLE_HISTORIAL
		{
			get
			{
				return this.GetTable<DETALLE_HISTORIAL>();
			}
		}
		
		public System.Data.Linq.Table<RESERVA> RESERVA
		{
			get
			{
				return this.GetTable<RESERVA>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PACIENTE")]
	public partial class PACIENTE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdPaciente;
		
		private string _Nombres;
		
		private string _Apellidos;
		
		private string _Dni;
		
		private string _Celular;
		
		private string _Correo;
		
		private string _Sexo;
		
		private System.Nullable<System.DateTime> _FchNacimiento;
		
		private System.Nullable<char> _EstadoCivil;
		
		private System.DateTime _FchRegistro;
		
		private System.DateTime _FchModifico;
		
		private bool _Activo;
		
		private EntitySet<HISTORIAL> _HISTORIAL;
		
		private EntitySet<RESERVA> _RESERVA;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdPacienteChanging(int value);
    partial void OnIdPacienteChanged();
    partial void OnNombresChanging(string value);
    partial void OnNombresChanged();
    partial void OnApellidosChanging(string value);
    partial void OnApellidosChanged();
    partial void OnDniChanging(string value);
    partial void OnDniChanged();
    partial void OnCelularChanging(string value);
    partial void OnCelularChanged();
    partial void OnCorreoChanging(string value);
    partial void OnCorreoChanged();
    partial void OnSexoChanging(string value);
    partial void OnSexoChanged();
    partial void OnFchNacimientoChanging(System.Nullable<System.DateTime> value);
    partial void OnFchNacimientoChanged();
    partial void OnEstadoCivilChanging(System.Nullable<char> value);
    partial void OnEstadoCivilChanged();
    partial void OnFchRegistroChanging(System.DateTime value);
    partial void OnFchRegistroChanged();
    partial void OnFchModificoChanging(System.DateTime value);
    partial void OnFchModificoChanged();
    partial void OnActivoChanging(bool value);
    partial void OnActivoChanged();
    #endregion
		
		public PACIENTE()
		{
			this._HISTORIAL = new EntitySet<HISTORIAL>(new Action<HISTORIAL>(this.attach_HISTORIAL), new Action<HISTORIAL>(this.detach_HISTORIAL));
			this._RESERVA = new EntitySet<RESERVA>(new Action<RESERVA>(this.attach_RESERVA), new Action<RESERVA>(this.detach_RESERVA));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPaciente", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdPaciente
		{
			get
			{
				return this._IdPaciente;
			}
			set
			{
				if ((this._IdPaciente != value))
				{
					this.OnIdPacienteChanging(value);
					this.SendPropertyChanging();
					this._IdPaciente = value;
					this.SendPropertyChanged("IdPaciente");
					this.OnIdPacienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombres", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombres
		{
			get
			{
				return this._Nombres;
			}
			set
			{
				if ((this._Nombres != value))
				{
					this.OnNombresChanging(value);
					this.SendPropertyChanging();
					this._Nombres = value;
					this.SendPropertyChanged("Nombres");
					this.OnNombresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellidos", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Apellidos
		{
			get
			{
				return this._Apellidos;
			}
			set
			{
				if ((this._Apellidos != value))
				{
					this.OnApellidosChanging(value);
					this.SendPropertyChanging();
					this._Apellidos = value;
					this.SendPropertyChanged("Apellidos");
					this.OnApellidosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dni", DbType="NChar(8) NOT NULL", CanBeNull=false)]
		public string Dni
		{
			get
			{
				return this._Dni;
			}
			set
			{
				if ((this._Dni != value))
				{
					this.OnDniChanging(value);
					this.SendPropertyChanging();
					this._Dni = value;
					this.SendPropertyChanged("Dni");
					this.OnDniChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Celular", DbType="NChar(12)")]
		public string Celular
		{
			get
			{
				return this._Celular;
			}
			set
			{
				if ((this._Celular != value))
				{
					this.OnCelularChanging(value);
					this.SendPropertyChanging();
					this._Celular = value;
					this.SendPropertyChanged("Celular");
					this.OnCelularChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Correo", DbType="VarChar(50)")]
		public string Correo
		{
			get
			{
				return this._Correo;
			}
			set
			{
				if ((this._Correo != value))
				{
					this.OnCorreoChanging(value);
					this.SendPropertyChanging();
					this._Correo = value;
					this.SendPropertyChanged("Correo");
					this.OnCorreoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sexo", DbType="NChar(10)")]
		public string Sexo
		{
			get
			{
				return this._Sexo;
			}
			set
			{
				if ((this._Sexo != value))
				{
					this.OnSexoChanging(value);
					this.SendPropertyChanging();
					this._Sexo = value;
					this.SendPropertyChanged("Sexo");
					this.OnSexoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FchNacimiento", DbType="DateTime")]
		public System.Nullable<System.DateTime> FchNacimiento
		{
			get
			{
				return this._FchNacimiento;
			}
			set
			{
				if ((this._FchNacimiento != value))
				{
					this.OnFchNacimientoChanging(value);
					this.SendPropertyChanging();
					this._FchNacimiento = value;
					this.SendPropertyChanged("FchNacimiento");
					this.OnFchNacimientoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstadoCivil", DbType="NChar(1)")]
		public System.Nullable<char> EstadoCivil
		{
			get
			{
				return this._EstadoCivil;
			}
			set
			{
				if ((this._EstadoCivil != value))
				{
					this.OnEstadoCivilChanging(value);
					this.SendPropertyChanging();
					this._EstadoCivil = value;
					this.SendPropertyChanged("EstadoCivil");
					this.OnEstadoCivilChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FchRegistro", DbType="DateTime NOT NULL")]
		public System.DateTime FchRegistro
		{
			get
			{
				return this._FchRegistro;
			}
			set
			{
				if ((this._FchRegistro != value))
				{
					this.OnFchRegistroChanging(value);
					this.SendPropertyChanging();
					this._FchRegistro = value;
					this.SendPropertyChanged("FchRegistro");
					this.OnFchRegistroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FchModifico", DbType="DateTime NOT NULL")]
		public System.DateTime FchModifico
		{
			get
			{
				return this._FchModifico;
			}
			set
			{
				if ((this._FchModifico != value))
				{
					this.OnFchModificoChanging(value);
					this.SendPropertyChanging();
					this._FchModifico = value;
					this.SendPropertyChanged("FchModifico");
					this.OnFchModificoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activo", DbType="Bit NOT NULL")]
		public bool Activo
		{
			get
			{
				return this._Activo;
			}
			set
			{
				if ((this._Activo != value))
				{
					this.OnActivoChanging(value);
					this.SendPropertyChanging();
					this._Activo = value;
					this.SendPropertyChanged("Activo");
					this.OnActivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PACIENTE_HISTORIAL", Storage="_HISTORIAL", ThisKey="IdPaciente", OtherKey="IdPaciente")]
		public EntitySet<HISTORIAL> HISTORIAL
		{
			get
			{
				return this._HISTORIAL;
			}
			set
			{
				this._HISTORIAL.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PACIENTE_RESERVA", Storage="_RESERVA", ThisKey="IdPaciente", OtherKey="IdPaciente")]
		public EntitySet<RESERVA> RESERVA
		{
			get
			{
				return this._RESERVA;
			}
			set
			{
				this._RESERVA.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HISTORIAL(HISTORIAL entity)
		{
			this.SendPropertyChanging();
			entity.PACIENTE = this;
		}
		
		private void detach_HISTORIAL(HISTORIAL entity)
		{
			this.SendPropertyChanging();
			entity.PACIENTE = null;
		}
		
		private void attach_RESERVA(RESERVA entity)
		{
			this.SendPropertyChanging();
			entity.PACIENTE = this;
		}
		
		private void detach_RESERVA(RESERVA entity)
		{
			this.SendPropertyChanging();
			entity.PACIENTE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TRATAMIENTO")]
	public partial class TRATAMIENTO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdTratamiento;
		
		private string _CodTratamiento;
		
		private string _Descripcion;
		
		private decimal _Precio;
		
		private EntitySet<DETALLE_HISTORIAL> _DETALLE_HISTORIAL;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdTratamientoChanging(int value);
    partial void OnIdTratamientoChanged();
    partial void OnCodTratamientoChanging(string value);
    partial void OnCodTratamientoChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnPrecioChanging(decimal value);
    partial void OnPrecioChanged();
    #endregion
		
		public TRATAMIENTO()
		{
			this._DETALLE_HISTORIAL = new EntitySet<DETALLE_HISTORIAL>(new Action<DETALLE_HISTORIAL>(this.attach_DETALLE_HISTORIAL), new Action<DETALLE_HISTORIAL>(this.detach_DETALLE_HISTORIAL));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTratamiento", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdTratamiento
		{
			get
			{
				return this._IdTratamiento;
			}
			set
			{
				if ((this._IdTratamiento != value))
				{
					this.OnIdTratamientoChanging(value);
					this.SendPropertyChanging();
					this._IdTratamiento = value;
					this.SendPropertyChanged("IdTratamiento");
					this.OnIdTratamientoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodTratamiento", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string CodTratamiento
		{
			get
			{
				return this._CodTratamiento;
			}
			set
			{
				if ((this._CodTratamiento != value))
				{
					this.OnCodTratamientoChanging(value);
					this.SendPropertyChanging();
					this._CodTratamiento = value;
					this.SendPropertyChanged("CodTratamiento");
					this.OnCodTratamientoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Precio", DbType="Decimal(18,2) NOT NULL")]
		public decimal Precio
		{
			get
			{
				return this._Precio;
			}
			set
			{
				if ((this._Precio != value))
				{
					this.OnPrecioChanging(value);
					this.SendPropertyChanging();
					this._Precio = value;
					this.SendPropertyChanged("Precio");
					this.OnPrecioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TRATAMIENTO_DETALLE_HISTORIAL", Storage="_DETALLE_HISTORIAL", ThisKey="IdTratamiento", OtherKey="IdTratamiento")]
		public EntitySet<DETALLE_HISTORIAL> DETALLE_HISTORIAL
		{
			get
			{
				return this._DETALLE_HISTORIAL;
			}
			set
			{
				this._DETALLE_HISTORIAL.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DETALLE_HISTORIAL(DETALLE_HISTORIAL entity)
		{
			this.SendPropertyChanging();
			entity.TRATAMIENTO = this;
		}
		
		private void detach_DETALLE_HISTORIAL(DETALLE_HISTORIAL entity)
		{
			this.SendPropertyChanging();
			entity.TRATAMIENTO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HISTORIAL")]
	public partial class HISTORIAL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdHistorial;
		
		private int _IdPaciente;
		
		private System.DateTime _FchCreacion;
		
		private System.DateTime _FchModificacion;
		
		private string _ArchivoDiagnostico;
		
		private string _ArchivoAtendido;
		
		private string _Especificaciones;
		
		private EntitySet<DETALLE_HISTORIAL> _DETALLE_HISTORIAL;
		
		private EntityRef<PACIENTE> _PACIENTE;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdHistorialChanging(int value);
    partial void OnIdHistorialChanged();
    partial void OnIdPacienteChanging(int value);
    partial void OnIdPacienteChanged();
    partial void OnFchCreacionChanging(System.DateTime value);
    partial void OnFchCreacionChanged();
    partial void OnFchModificacionChanging(System.DateTime value);
    partial void OnFchModificacionChanged();
    partial void OnArchivoDiagnosticoChanging(string value);
    partial void OnArchivoDiagnosticoChanged();
    partial void OnArchivoAtendidoChanging(string value);
    partial void OnArchivoAtendidoChanged();
    partial void OnEspecificacionesChanging(string value);
    partial void OnEspecificacionesChanged();
    #endregion
		
		public HISTORIAL()
		{
			this._DETALLE_HISTORIAL = new EntitySet<DETALLE_HISTORIAL>(new Action<DETALLE_HISTORIAL>(this.attach_DETALLE_HISTORIAL), new Action<DETALLE_HISTORIAL>(this.detach_DETALLE_HISTORIAL));
			this._PACIENTE = default(EntityRef<PACIENTE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdHistorial", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdHistorial
		{
			get
			{
				return this._IdHistorial;
			}
			set
			{
				if ((this._IdHistorial != value))
				{
					this.OnIdHistorialChanging(value);
					this.SendPropertyChanging();
					this._IdHistorial = value;
					this.SendPropertyChanged("IdHistorial");
					this.OnIdHistorialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPaciente", DbType="Int NOT NULL")]
		public int IdPaciente
		{
			get
			{
				return this._IdPaciente;
			}
			set
			{
				if ((this._IdPaciente != value))
				{
					if (this._PACIENTE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdPacienteChanging(value);
					this.SendPropertyChanging();
					this._IdPaciente = value;
					this.SendPropertyChanged("IdPaciente");
					this.OnIdPacienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FchCreacion", DbType="DateTime NOT NULL")]
		public System.DateTime FchCreacion
		{
			get
			{
				return this._FchCreacion;
			}
			set
			{
				if ((this._FchCreacion != value))
				{
					this.OnFchCreacionChanging(value);
					this.SendPropertyChanging();
					this._FchCreacion = value;
					this.SendPropertyChanged("FchCreacion");
					this.OnFchCreacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FchModificacion", DbType="DateTime NOT NULL")]
		public System.DateTime FchModificacion
		{
			get
			{
				return this._FchModificacion;
			}
			set
			{
				if ((this._FchModificacion != value))
				{
					this.OnFchModificacionChanging(value);
					this.SendPropertyChanging();
					this._FchModificacion = value;
					this.SendPropertyChanged("FchModificacion");
					this.OnFchModificacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArchivoDiagnostico", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ArchivoDiagnostico
		{
			get
			{
				return this._ArchivoDiagnostico;
			}
			set
			{
				if ((this._ArchivoDiagnostico != value))
				{
					this.OnArchivoDiagnosticoChanging(value);
					this.SendPropertyChanging();
					this._ArchivoDiagnostico = value;
					this.SendPropertyChanged("ArchivoDiagnostico");
					this.OnArchivoDiagnosticoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArchivoAtendido", DbType="VarChar(50)")]
		public string ArchivoAtendido
		{
			get
			{
				return this._ArchivoAtendido;
			}
			set
			{
				if ((this._ArchivoAtendido != value))
				{
					this.OnArchivoAtendidoChanging(value);
					this.SendPropertyChanging();
					this._ArchivoAtendido = value;
					this.SendPropertyChanged("ArchivoAtendido");
					this.OnArchivoAtendidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Especificaciones", DbType="VarChar(MAX)")]
		public string Especificaciones
		{
			get
			{
				return this._Especificaciones;
			}
			set
			{
				if ((this._Especificaciones != value))
				{
					this.OnEspecificacionesChanging(value);
					this.SendPropertyChanging();
					this._Especificaciones = value;
					this.SendPropertyChanged("Especificaciones");
					this.OnEspecificacionesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HISTORIAL_DETALLE_HISTORIAL", Storage="_DETALLE_HISTORIAL", ThisKey="IdHistorial", OtherKey="IdHistorial")]
		public EntitySet<DETALLE_HISTORIAL> DETALLE_HISTORIAL
		{
			get
			{
				return this._DETALLE_HISTORIAL;
			}
			set
			{
				this._DETALLE_HISTORIAL.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PACIENTE_HISTORIAL", Storage="_PACIENTE", ThisKey="IdPaciente", OtherKey="IdPaciente", IsForeignKey=true)]
		public PACIENTE PACIENTE
		{
			get
			{
				return this._PACIENTE.Entity;
			}
			set
			{
				PACIENTE previousValue = this._PACIENTE.Entity;
				if (((previousValue != value) 
							|| (this._PACIENTE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PACIENTE.Entity = null;
						previousValue.HISTORIAL.Remove(this);
					}
					this._PACIENTE.Entity = value;
					if ((value != null))
					{
						value.HISTORIAL.Add(this);
						this._IdPaciente = value.IdPaciente;
					}
					else
					{
						this._IdPaciente = default(int);
					}
					this.SendPropertyChanged("PACIENTE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DETALLE_HISTORIAL(DETALLE_HISTORIAL entity)
		{
			this.SendPropertyChanging();
			entity.HISTORIAL = this;
		}
		
		private void detach_DETALLE_HISTORIAL(DETALLE_HISTORIAL entity)
		{
			this.SendPropertyChanging();
			entity.HISTORIAL = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DETALLE_HISTORIAL")]
	public partial class DETALLE_HISTORIAL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdDetalleHistorial;
		
		private int _IdHistorial;
		
		private int _IdTratamiento;
		
		private bool _Realizado;
		
		private System.Nullable<System.DateTime> _FchRealizado;
		
		private EntityRef<HISTORIAL> _HISTORIAL;
		
		private EntityRef<TRATAMIENTO> _TRATAMIENTO;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdDetalleHistorialChanging(int value);
    partial void OnIdDetalleHistorialChanged();
    partial void OnIdHistorialChanging(int value);
    partial void OnIdHistorialChanged();
    partial void OnIdTratamientoChanging(int value);
    partial void OnIdTratamientoChanged();
    partial void OnRealizadoChanging(bool value);
    partial void OnRealizadoChanged();
    partial void OnFchRealizadoChanging(System.Nullable<System.DateTime> value);
    partial void OnFchRealizadoChanged();
    #endregion
		
		public DETALLE_HISTORIAL()
		{
			this._HISTORIAL = default(EntityRef<HISTORIAL>);
			this._TRATAMIENTO = default(EntityRef<TRATAMIENTO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDetalleHistorial", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdDetalleHistorial
		{
			get
			{
				return this._IdDetalleHistorial;
			}
			set
			{
				if ((this._IdDetalleHistorial != value))
				{
					this.OnIdDetalleHistorialChanging(value);
					this.SendPropertyChanging();
					this._IdDetalleHistorial = value;
					this.SendPropertyChanged("IdDetalleHistorial");
					this.OnIdDetalleHistorialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdHistorial", DbType="Int NOT NULL")]
		public int IdHistorial
		{
			get
			{
				return this._IdHistorial;
			}
			set
			{
				if ((this._IdHistorial != value))
				{
					if (this._HISTORIAL.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdHistorialChanging(value);
					this.SendPropertyChanging();
					this._IdHistorial = value;
					this.SendPropertyChanged("IdHistorial");
					this.OnIdHistorialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTratamiento", DbType="Int NOT NULL")]
		public int IdTratamiento
		{
			get
			{
				return this._IdTratamiento;
			}
			set
			{
				if ((this._IdTratamiento != value))
				{
					if (this._TRATAMIENTO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTratamientoChanging(value);
					this.SendPropertyChanging();
					this._IdTratamiento = value;
					this.SendPropertyChanged("IdTratamiento");
					this.OnIdTratamientoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Realizado", DbType="Bit NOT NULL")]
		public bool Realizado
		{
			get
			{
				return this._Realizado;
			}
			set
			{
				if ((this._Realizado != value))
				{
					this.OnRealizadoChanging(value);
					this.SendPropertyChanging();
					this._Realizado = value;
					this.SendPropertyChanged("Realizado");
					this.OnRealizadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FchRealizado", DbType="DateTime")]
		public System.Nullable<System.DateTime> FchRealizado
		{
			get
			{
				return this._FchRealizado;
			}
			set
			{
				if ((this._FchRealizado != value))
				{
					this.OnFchRealizadoChanging(value);
					this.SendPropertyChanging();
					this._FchRealizado = value;
					this.SendPropertyChanged("FchRealizado");
					this.OnFchRealizadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HISTORIAL_DETALLE_HISTORIAL", Storage="_HISTORIAL", ThisKey="IdHistorial", OtherKey="IdHistorial", IsForeignKey=true)]
		public HISTORIAL HISTORIAL
		{
			get
			{
				return this._HISTORIAL.Entity;
			}
			set
			{
				HISTORIAL previousValue = this._HISTORIAL.Entity;
				if (((previousValue != value) 
							|| (this._HISTORIAL.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HISTORIAL.Entity = null;
						previousValue.DETALLE_HISTORIAL.Remove(this);
					}
					this._HISTORIAL.Entity = value;
					if ((value != null))
					{
						value.DETALLE_HISTORIAL.Add(this);
						this._IdHistorial = value.IdHistorial;
					}
					else
					{
						this._IdHistorial = default(int);
					}
					this.SendPropertyChanged("HISTORIAL");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TRATAMIENTO_DETALLE_HISTORIAL", Storage="_TRATAMIENTO", ThisKey="IdTratamiento", OtherKey="IdTratamiento", IsForeignKey=true)]
		public TRATAMIENTO TRATAMIENTO
		{
			get
			{
				return this._TRATAMIENTO.Entity;
			}
			set
			{
				TRATAMIENTO previousValue = this._TRATAMIENTO.Entity;
				if (((previousValue != value) 
							|| (this._TRATAMIENTO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TRATAMIENTO.Entity = null;
						previousValue.DETALLE_HISTORIAL.Remove(this);
					}
					this._TRATAMIENTO.Entity = value;
					if ((value != null))
					{
						value.DETALLE_HISTORIAL.Add(this);
						this._IdTratamiento = value.IdTratamiento;
					}
					else
					{
						this._IdTratamiento = default(int);
					}
					this.SendPropertyChanged("TRATAMIENTO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RESERVA")]
	public partial class RESERVA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdReserva;
		
		private int _IdPaciente;
		
		private System.DateTime _FchRegistro;
		
		private System.DateTime _FchReserva;
		
		private string _Estado;
		
		private bool _Activo;
		
		private EntityRef<PACIENTE> _PACIENTE;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdReservaChanging(int value);
    partial void OnIdReservaChanged();
    partial void OnIdPacienteChanging(int value);
    partial void OnIdPacienteChanged();
    partial void OnFchRegistroChanging(System.DateTime value);
    partial void OnFchRegistroChanged();
    partial void OnFchReservaChanging(System.DateTime value);
    partial void OnFchReservaChanged();
    partial void OnEstadoChanging(string value);
    partial void OnEstadoChanged();
    partial void OnActivoChanging(bool value);
    partial void OnActivoChanged();
    #endregion
		
		public RESERVA()
		{
			this._PACIENTE = default(EntityRef<PACIENTE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdReserva", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdReserva
		{
			get
			{
				return this._IdReserva;
			}
			set
			{
				if ((this._IdReserva != value))
				{
					this.OnIdReservaChanging(value);
					this.SendPropertyChanging();
					this._IdReserva = value;
					this.SendPropertyChanged("IdReserva");
					this.OnIdReservaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPaciente", DbType="Int NOT NULL")]
		public int IdPaciente
		{
			get
			{
				return this._IdPaciente;
			}
			set
			{
				if ((this._IdPaciente != value))
				{
					if (this._PACIENTE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdPacienteChanging(value);
					this.SendPropertyChanging();
					this._IdPaciente = value;
					this.SendPropertyChanged("IdPaciente");
					this.OnIdPacienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FchRegistro", DbType="DateTime NOT NULL")]
		public System.DateTime FchRegistro
		{
			get
			{
				return this._FchRegistro;
			}
			set
			{
				if ((this._FchRegistro != value))
				{
					this.OnFchRegistroChanging(value);
					this.SendPropertyChanging();
					this._FchRegistro = value;
					this.SendPropertyChanged("FchRegistro");
					this.OnFchRegistroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FchReserva", DbType="DateTime NOT NULL")]
		public System.DateTime FchReserva
		{
			get
			{
				return this._FchReserva;
			}
			set
			{
				if ((this._FchReserva != value))
				{
					this.OnFchReservaChanging(value);
					this.SendPropertyChanging();
					this._FchReserva = value;
					this.SendPropertyChanged("FchReserva");
					this.OnFchReservaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activo", DbType="Bit NOT NULL")]
		public bool Activo
		{
			get
			{
				return this._Activo;
			}
			set
			{
				if ((this._Activo != value))
				{
					this.OnActivoChanging(value);
					this.SendPropertyChanging();
					this._Activo = value;
					this.SendPropertyChanged("Activo");
					this.OnActivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PACIENTE_RESERVA", Storage="_PACIENTE", ThisKey="IdPaciente", OtherKey="IdPaciente", IsForeignKey=true)]
		public PACIENTE PACIENTE
		{
			get
			{
				return this._PACIENTE.Entity;
			}
			set
			{
				PACIENTE previousValue = this._PACIENTE.Entity;
				if (((previousValue != value) 
							|| (this._PACIENTE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PACIENTE.Entity = null;
						previousValue.RESERVA.Remove(this);
					}
					this._PACIENTE.Entity = value;
					if ((value != null))
					{
						value.RESERVA.Add(this);
						this._IdPaciente = value.IdPaciente;
					}
					else
					{
						this._IdPaciente = default(int);
					}
					this.SendPropertyChanged("PACIENTE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
